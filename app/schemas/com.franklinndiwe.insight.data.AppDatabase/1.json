{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "7a338d254a2476c5efbc94674d69d3c1",
    "entities": [
      {
        "tableName": "quotes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `text` TEXT NOT NULL, `authorId` INTEGER NOT NULL, `categoryId1` INTEGER NOT NULL, `categoryId2` INTEGER, `liked` INTEGER, `userGenerated` INTEGER, FOREIGN KEY(`authorId`) REFERENCES `authors`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`categoryId1`) REFERENCES `categories`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`categoryId2`) REFERENCES `categories`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId1",
            "columnName": "categoryId1",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId2",
            "columnName": "categoryId2",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "liked",
            "columnName": "liked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "userGenerated",
            "columnName": "userGenerated",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_quotes_authorId",
            "unique": false,
            "columnNames": [
              "authorId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_quotes_authorId` ON `${TABLE_NAME}` (`authorId`)"
          },
          {
            "name": "index_quotes_categoryId1",
            "unique": false,
            "columnNames": [
              "categoryId1"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_quotes_categoryId1` ON `${TABLE_NAME}` (`categoryId1`)"
          },
          {
            "name": "index_quotes_categoryId2",
            "unique": false,
            "columnNames": [
              "categoryId2"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_quotes_categoryId2` ON `${TABLE_NAME}` (`categoryId2`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "authors",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "authorId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "categories",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId1"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "categories",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId2"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "authors",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `liked` INTEGER, `popular` INTEGER NOT NULL, `following` INTEGER NOT NULL, `userGenerated` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "liked",
            "columnName": "liked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "popular",
            "columnName": "popular",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "following",
            "columnName": "following",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userGenerated",
            "columnName": "userGenerated",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `liked` INTEGER, `unlocked` INTEGER NOT NULL, `popular` INTEGER NOT NULL, `userGenerated` INTEGER, `following` INTEGER NOT NULL, `daily` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "liked",
            "columnName": "liked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "unlocked",
            "columnName": "unlocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "popular",
            "columnName": "popular",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userGenerated",
            "columnName": "userGenerated",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "following",
            "columnName": "following",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "daily",
            "columnName": "daily",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "setting",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `themeType` TEXT NOT NULL, `dynamicColor` INTEGER NOT NULL, `fontIndex` INTEGER NOT NULL, `contrastIndex` INTEGER NOT NULL, `dailyQuote` INTEGER, `dailyQuoteReminderEnabled` INTEGER NOT NULL, `reminderTimeHour` INTEGER NOT NULL, `reminderTimeMinute` INTEGER NOT NULL, `dateOfLastQuote` TEXT NOT NULL, `swipeDirection` TEXT NOT NULL, `theme` TEXT NOT NULL, `delay` INTEGER NOT NULL, `defaultShortQuoteTextSize` INTEGER NOT NULL, `defaultLongQuoteTextSize` INTEGER NOT NULL, `defaultAuthorTextSize` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "themeType",
            "columnName": "themeType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dynamicColor",
            "columnName": "dynamicColor",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fontIndex",
            "columnName": "fontIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contrastIndex",
            "columnName": "contrastIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dailyQuote",
            "columnName": "dailyQuote",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "dailyQuoteReminderEnabled",
            "columnName": "dailyQuoteReminderEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reminderTimeHour",
            "columnName": "reminderTimeHour",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reminderTimeMinute",
            "columnName": "reminderTimeMinute",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateOfLastQuote",
            "columnName": "dateOfLastQuote",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "swipeDirection",
            "columnName": "swipeDirection",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "theme",
            "columnName": "theme",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "delay",
            "columnName": "delay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "defaultShortQuoteTextSize",
            "columnName": "defaultShortQuoteTextSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "defaultLongQuoteTextSize",
            "columnName": "defaultLongQuoteTextSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "defaultAuthorTextSize",
            "columnName": "defaultAuthorTextSize",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "quote_images",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `path` TEXT NOT NULL, `categoryName` TEXT NOT NULL, `unlocked` INTEGER NOT NULL, `shipped` INTEGER NOT NULL, `textColor` INTEGER, `tintColor` INTEGER, `fontId` INTEGER, FOREIGN KEY(`categoryName`) REFERENCES `image_categories`(`name`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`fontId`) REFERENCES `fonts`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "categoryName",
            "columnName": "categoryName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "attributes.unlocked",
            "columnName": "unlocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attributes.shipped",
            "columnName": "shipped",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attributes.textColor",
            "columnName": "textColor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attributes.tintColor",
            "columnName": "tintColor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attributes.fontId",
            "columnName": "fontId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_quote_images_categoryName",
            "unique": false,
            "columnNames": [
              "categoryName"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_quote_images_categoryName` ON `${TABLE_NAME}` (`categoryName`)"
          },
          {
            "name": "index_quote_images_fontId",
            "unique": false,
            "columnNames": [
              "fontId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_quote_images_fontId` ON `${TABLE_NAME}` (`fontId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "image_categories",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryName"
            ],
            "referencedColumns": [
              "name"
            ]
          },
          {
            "table": "fonts",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "fontId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "image_categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`name` TEXT NOT NULL, `included` INTEGER NOT NULL, `shipped` INTEGER NOT NULL, PRIMARY KEY(`name`))",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "included",
            "columnName": "included",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shipped",
            "columnName": "shipped",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "name"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "gradients",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `colors` TEXT NOT NULL, `unlocked` INTEGER NOT NULL, `shipped` INTEGER NOT NULL, `textColor` INTEGER, `tintColor` INTEGER, `fontId` INTEGER, FOREIGN KEY(`fontId`) REFERENCES `fonts`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "colors",
            "columnName": "colors",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "attributes.unlocked",
            "columnName": "unlocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attributes.shipped",
            "columnName": "shipped",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attributes.textColor",
            "columnName": "textColor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attributes.tintColor",
            "columnName": "tintColor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attributes.fontId",
            "columnName": "fontId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_gradients_fontId",
            "unique": false,
            "columnNames": [
              "fontId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_gradients_fontId` ON `${TABLE_NAME}` (`fontId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "fonts",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "fontId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "colors",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `background` INTEGER NOT NULL, `unlocked` INTEGER NOT NULL, `shipped` INTEGER NOT NULL, `textColor` INTEGER, `tintColor` INTEGER, `fontId` INTEGER, FOREIGN KEY(`fontId`) REFERENCES `fonts`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "background",
            "columnName": "background",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attributes.unlocked",
            "columnName": "unlocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attributes.shipped",
            "columnName": "shipped",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attributes.textColor",
            "columnName": "textColor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attributes.tintColor",
            "columnName": "tintColor",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attributes.fontId",
            "columnName": "fontId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_colors_fontId",
            "unique": false,
            "columnNames": [
              "fontId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_colors_fontId` ON `${TABLE_NAME}` (`fontId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "fonts",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "fontId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "fonts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `path` TEXT NOT NULL, `textSizeForShortQuote` INTEGER NOT NULL, `textSizeForLongQuote` INTEGER NOT NULL, `authorTextSize` INTEGER NOT NULL, `unlocked` INTEGER NOT NULL, `shipped` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "textSizeForShortQuote",
            "columnName": "textSizeForShortQuote",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "textSizeForLongQuote",
            "columnName": "textSizeForLongQuote",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorTextSize",
            "columnName": "authorTextSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unlocked",
            "columnName": "unlocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shipped",
            "columnName": "shipped",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "sort_order",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `type` TEXT NOT NULL, `subType` TEXT NOT NULL, `sortBy` TEXT NOT NULL, `order` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subType",
            "columnName": "subType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sortBy",
            "columnName": "sortBy",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "categories",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_category_fts_BEFORE_UPDATE BEFORE UPDATE ON `categories` BEGIN DELETE FROM `category_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_category_fts_BEFORE_DELETE BEFORE DELETE ON `categories` BEGIN DELETE FROM `category_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_category_fts_AFTER_UPDATE AFTER UPDATE ON `categories` BEGIN INSERT INTO `category_fts`(`docid`, `name`) VALUES (NEW.`rowid`, NEW.`name`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_category_fts_AFTER_INSERT AFTER INSERT ON `categories` BEGIN INSERT INTO `category_fts`(`docid`, `name`) VALUES (NEW.`rowid`, NEW.`name`); END"
        ],
        "tableName": "category_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`name` TEXT NOT NULL, content=`categories`)",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": []
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "quotes",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_quote_fts_BEFORE_UPDATE BEFORE UPDATE ON `quotes` BEGIN DELETE FROM `quote_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_quote_fts_BEFORE_DELETE BEFORE DELETE ON `quotes` BEGIN DELETE FROM `quote_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_quote_fts_AFTER_UPDATE AFTER UPDATE ON `quotes` BEGIN INSERT INTO `quote_fts`(`docid`, `text`) VALUES (NEW.`rowid`, NEW.`text`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_quote_fts_AFTER_INSERT AFTER INSERT ON `quotes` BEGIN INSERT INTO `quote_fts`(`docid`, `text`) VALUES (NEW.`rowid`, NEW.`text`); END"
        ],
        "tableName": "quote_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`text` TEXT NOT NULL, content=`quotes`)",
        "fields": [
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": []
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "authors",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_author_fts_BEFORE_UPDATE BEFORE UPDATE ON `authors` BEGIN DELETE FROM `author_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_author_fts_BEFORE_DELETE BEFORE DELETE ON `authors` BEGIN DELETE FROM `author_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_author_fts_AFTER_UPDATE AFTER UPDATE ON `authors` BEGIN INSERT INTO `author_fts`(`docid`, `name`) VALUES (NEW.`rowid`, NEW.`name`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_author_fts_AFTER_INSERT AFTER INSERT ON `authors` BEGIN INSERT INTO `author_fts`(`docid`, `name`) VALUES (NEW.`rowid`, NEW.`name`); END"
        ],
        "tableName": "author_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`name` TEXT NOT NULL, content=`authors`)",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": []
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '7a338d254a2476c5efbc94674d69d3c1')"
    ]
  }
}